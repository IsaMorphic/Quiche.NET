// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;


namespace Quiche
{
    internal static unsafe partial class NativeMethods
    {
        const string __DllName = "libquiche";



        [DllImport(__DllName, EntryPoint = "quiche_enable_debug_logging", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_enable_debug_logging(delegate* unmanaged[Cdecl]<byte*, void*, void> cb, void* argp);

        [DllImport(__DllName, EntryPoint = "quiche_config_new", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern Config* quiche_config_new(uint version);

        [DllImport(__DllName, EntryPoint = "quiche_config_load_cert_chain_from_pem_file", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern int quiche_config_load_cert_chain_from_pem_file(Config* config, byte* path);

        [DllImport(__DllName, EntryPoint = "quiche_config_load_priv_key_from_pem_file", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern int quiche_config_load_priv_key_from_pem_file(Config* config, byte* path);

        [DllImport(__DllName, EntryPoint = "quiche_config_verify_peer", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_verify_peer(Config* config, [MarshalAs(UnmanagedType.U1)] bool v);

        [DllImport(__DllName, EntryPoint = "quiche_config_grease", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_grease(Config* config, [MarshalAs(UnmanagedType.U1)] bool v);

        [DllImport(__DllName, EntryPoint = "quiche_config_log_keys", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_log_keys(Config* config);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_application_protos", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern int quiche_config_set_application_protos(Config* config, byte* protos, nuint protos_len);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_idle_timeout", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_set_idle_timeout(Config* config, ulong v);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_max_packet_size", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_set_max_packet_size(Config* config, ulong v);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_initial_max_data", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_set_initial_max_data(Config* config, ulong v);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_initial_max_stream_data_bidi_local", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_set_initial_max_stream_data_bidi_local(Config* config, ulong v);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_initial_max_stream_data_bidi_remote", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_set_initial_max_stream_data_bidi_remote(Config* config, ulong v);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_initial_max_stream_data_uni", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_set_initial_max_stream_data_uni(Config* config, ulong v);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_initial_max_streams_bidi", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_set_initial_max_streams_bidi(Config* config, ulong v);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_initial_max_streams_uni", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_set_initial_max_streams_uni(Config* config, ulong v);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_ack_delay_exponent", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_set_ack_delay_exponent(Config* config, ulong v);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_max_ack_delay", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_set_max_ack_delay(Config* config, ulong v);

        [DllImport(__DllName, EntryPoint = "quiche_config_set_disable_migration", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_set_disable_migration(Config* config, [MarshalAs(UnmanagedType.U1)] bool v);

        [DllImport(__DllName, EntryPoint = "quiche_config_free", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_config_free(Config* config);

        [DllImport(__DllName, EntryPoint = "quiche_header_info", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern int quiche_header_info(byte* buf, nuint buf_len, nuint dcil, uint* version, byte* type_, byte* scid, nuint* scid_len, byte* dcid, nuint* dcid_len, byte* token, nuint* token_len);

        [DllImport(__DllName, EntryPoint = "quiche_accept", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern Connection* quiche_accept(byte* scid, nuint scid_len, byte* odcid, nuint odcid_len, Config* config);

        [DllImport(__DllName, EntryPoint = "quiche_connect", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern Connection* quiche_connect(byte* server_name, byte* scid, nuint scid_len, Config* config);

        [DllImport(__DllName, EntryPoint = "quiche_negotiate_version", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nint quiche_negotiate_version(byte* scid, nuint scid_len, byte* dcid, nuint dcid_len, byte* @out, nuint out_len);

        [DllImport(__DllName, EntryPoint = "quiche_retry", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nint quiche_retry(byte* scid, nuint scid_len, byte* dcid, nuint dcid_len, byte* new_scid, nuint new_scid_len, byte* token, nuint token_len, byte* @out, nuint out_len);

        [DllImport(__DllName, EntryPoint = "quiche_conn_new_with_tls", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern Connection* quiche_conn_new_with_tls(byte* scid, nuint scid_len, byte* odcid, nuint odcid_len, Config* config, void* ssl, [MarshalAs(UnmanagedType.U1)] bool is_server);

        [DllImport(__DllName, EntryPoint = "quiche_conn_recv", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nint quiche_conn_recv(Connection* conn, byte* buf, nuint buf_len);

        [DllImport(__DllName, EntryPoint = "quiche_conn_send", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nint quiche_conn_send(Connection* conn, byte* @out, nuint out_len);

        [DllImport(__DllName, EntryPoint = "quiche_conn_stream_recv", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nint quiche_conn_stream_recv(Connection* conn, ulong stream_id, byte* @out, nuint buf_len, bool* fin);

        [DllImport(__DllName, EntryPoint = "quiche_conn_stream_send", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern nint quiche_conn_stream_send(Connection* conn, ulong stream_id, byte* buf, nuint buf_len, [MarshalAs(UnmanagedType.U1)] bool fin);

        [DllImport(__DllName, EntryPoint = "quiche_conn_stream_shutdown", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern int quiche_conn_stream_shutdown(Connection* conn, ulong stream_id, uint direction, ulong err);

        [DllImport(__DllName, EntryPoint = "quiche_conn_stream_finished", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool quiche_conn_stream_finished(Connection* conn, ulong stream_id);

        [DllImport(__DllName, EntryPoint = "quiche_readable_next", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool quiche_readable_next(Connection* conn, ulong* stream_id);

        [DllImport(__DllName, EntryPoint = "quiche_conn_timeout_as_nanos", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern ulong quiche_conn_timeout_as_nanos(Connection* conn);

        [DllImport(__DllName, EntryPoint = "quiche_conn_on_timeout", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_conn_on_timeout(Connection* conn);

        [DllImport(__DllName, EntryPoint = "quiche_conn_close", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern int quiche_conn_close(Connection* conn, [MarshalAs(UnmanagedType.U1)] bool app, ushort err, byte* reason, nuint reason_len);

        [DllImport(__DllName, EntryPoint = "quiche_conn_application_proto", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern byte* quiche_conn_application_proto(Connection* conn, byte** @out, nuint* out_len);

        [DllImport(__DllName, EntryPoint = "quiche_conn_is_established", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool quiche_conn_is_established(Connection* conn);

        [DllImport(__DllName, EntryPoint = "quiche_conn_is_closed", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        internal static extern bool quiche_conn_is_closed(Connection* conn);

        [DllImport(__DllName, EntryPoint = "quiche_conn_stats", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_conn_stats(Connection* conn, quiche_stats* @out);

        [DllImport(__DllName, EntryPoint = "quiche_conn_free", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        internal static extern void quiche_conn_free(Connection* conn);


    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct Config
    {
        public fixed byte _unused[1];
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct Connection
    {
        public fixed byte _unused[1];
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct quiche_stats
    {
        public nuint recv;
        public nuint sent;
        public nuint lost;
        public ulong rtt;
        public nuint cwnd;
    }



}
